@using MDStore.Components
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@implements IDisposable

<SkipToMainContent mainContentId="records#mainContent" />

<header class="header">
    <div class="container">
        <div class="row">
            <div class="col-sm-3">
                <a href="/records" alt="Navigate to Music Discovery Hompeage">
                    <AccessibleImage src="logo.png" altText="Music Discovery store logo" />
                </a>
            </div>
            <div class="col-sm">
                <div class="topHeader">
                    <span>
                        <SearchBox OnSearch="@((t)=> Search(t))" />
                    </span>

                </div>
                <hr />
                <div>
                    <CategorySelector categories="@categories" selectedCategory="@selectedCategory" />
                </div>
            </div>
            <div class="col-sm userLogin">
                <a href="/account" class="headerLink">
                    <span>Account</span>
                    <span class="oi oi-person" aria-hidden="true"></span>
                </a>
            </div>

        </div>
    </div>
</header>

<div class="page">

    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>
@code {

    private string[] categories = new string[] { "Rock", "Metal", "Classic" };

    private string selectedCategory = "";

    protected override async Task OnInitializedAsync()
    {
        NavigationManager.LocationChanged += NavigationManager_LocationChanged;
        selectedCategory = NavigationManager.QueryString("category");
    }

    private void NavigationManager_LocationChanged(object sender, LocationChangedEventArgs e)
    {
        selectedCategory = NavigationManager.QueryString("category");
        StateHasChanged();
    }

    private void Search(string text)
    {
        NavigationManager.NavigateTo($"records?q={text}");
    }

    void IDisposable.Dispose()
    {
        NavigationManager.LocationChanged -= NavigationManager_LocationChanged;
    }
}